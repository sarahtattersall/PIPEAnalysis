<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <artifactId>pipe-analysis</artifactId>
    <groupId>uk.ac.imperial</groupId>
    <version>1.0.3-SNAPSHOT</version>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <github.global.server>github</github.global.server>
    </properties>

    <scm>
    	<!-- 
    	   Used by maven release plugin (prepare, not perform)   
    	   Add -Dgithub.site.repositoryOwner=yourGithubUserId to maven release:prepare, e.g.,   
    	   -Dgithub.site.repositoryOwner=sjdayday release:prepare
    	 -->
        <developerConnection>scm:git:git@github.com:${github.site.repositoryOwner}/PIPEAnalysis.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <repositories>
        <repository>
            <id>PIPEMarkovChain-mvn-repo</id>
            <url>https://raw.github.com/sarahtattersall/PIPEMarkovChain/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>PIPECore-mvn-repo</id>
            <url>https://raw.github.com/sarahtattersall/PIPECore/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>uk.ac.imperial</groupId>
            <artifactId>pipe-core</artifactId>
            <version>1.0.3-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>uk.ac.imperial</groupId>
            <artifactId>pipe-markov-chain</artifactId>
            <version>1.0.3-SNAPSHOT</version>
        </dependency>


        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>17.0</version>
        </dependency>

        <dependency>
            <groupId>com.github.stephenc.high-scale-lib</groupId>
            <artifactId>high-scale-lib</artifactId>
            <version>1.1.4</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.8.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.24.0</version>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.1.6</version>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-picocontainer</artifactId>
            <version>1.1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.1.6</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-surefire-plugin</artifactId>-->
            <!--<version>2.5</version>-->
            <!--<configuration>-->
            <!--<forkMode>once</forkMode>-->
            <!--<argLine>-Xms$512m -Xmx$1024m</argLine>-->
            <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
       	    	<!-- 
		    	   Used by maven release plugin, and as part of deploy phase.  
		    	   For release:perform, any command line arguments must be passed using -Darguments="args... "
		    	   Add -Darguments=-Dgithub.site.repositoryOwner=yourGithubUserId to maven release:perform, e.g., 
			    	   -Darguments=-Dgithub.site.repositoryOwner=sjdayday release:perform
			       For release:prepare and the deploy phase, -Darguments is not needed:
			           -Dgithub.site.repositoryOwner=sjdayday  release:prepare 
			       	   -Dgithub.site.repositoryOwner=sjdayday clean deploy  
	        	 -->
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                    <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <branch>refs/heads/mvn-repo</branch>
                    <includes><include>**/*</include></includes>
                    <repositoryName>PIPEAnalysis</repositoryName>
                     <repositoryOwner>${github.site.repositoryOwner}</repositoryOwner>   
                    <merge>true</merge>
                </configuration>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
               <!-- this version and maven-scm-provider-gitexe 1.8.1 correctly 
               generate a release jar rather than a SNAPSHOT jar, but 
               do not correctly distinguish branch and tag by the same name
               so force an extra "-" in the tagNameFormat to keep them unique
               later versions of the two plugins (e.g., 2.5.3 and 1.9.4) 
               distinguish them via refs/heads/xxx and refs/tags/xxx but don't 
               yet fix the original problem of generating a SNAPSHOT jar.  -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.2</version>
                  <configuration>
          			<tagNameFormat>@{project.artifactId}--@{project.version}</tagNameFormat>
        		  </configuration>
			      <dependencies>
			        <dependency>
			          <groupId>org.apache.maven.scm</groupId>
			          <artifactId>maven-scm-provider-gitexe</artifactId>
			          <version>1.8.1</version>
			        </dependency>
			       </dependencies>
            </plugin>

        </plugins>
    </build>

<!--     <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>
 -->


</project>
